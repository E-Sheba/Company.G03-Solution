@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";
    TempData["Alert"] = "There are no Employees";
    string S02 = ViewBag.Data02;
}

<br />
<br />

@*
    //we use the name attribute for binding data so that
    //when the Index action starts looking for a source that provides it with the parameter that it needs
    //it will look for the parameter name either in the segment or in the querystring or in the form
    *@
<div class="row">
    <div class="col-3"></div>
    <form asp-action="Index" class="col-7">
        <h1>Employee Home Page</h1>


        <input type="text" id="id" name="InputSearch" class="form-control" style=" border-radius:23px;" />

        <div class="col-3"></div>

        <br />
    </form>

</div>



@* <div class="alert-success alert"> @TempData["Message01"]</div> *@

<br />
<br />

<a asp-action="Create" asp-controller="Employee" style="border-radius: 15px;" class="btn btn-primary">
    <img src="~/images/Plus_Icon.png" style="height:40px;" alt="+" />
    Create Employee
</a>
<br />
<br />
@if (Model.Count() > 0)
{

    <table class="table table-striped table-hover">
        <thead>


            <tr>
                <th>@Html.DisplayNameFor(e => e.Image)</th>
                <th>@Html.DisplayNameFor(e => e.Name)</th>
                <th>@Html.DisplayNameFor(e => e.Age)</th>
                <th>@Html.DisplayNameFor(e => e.Address)</th>
                <th>@Html.DisplayNameFor(e => e.Salary)</th>
                <th>@Html.DisplayNameFor(e => e.Email)</th>
                <th>@Html.DisplayNameFor(e => e.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(e => e.HiringDate)</th>
                <th>@Html.DisplayNameFor(e => e.WorkFor)</th>
                <th>@Html.DisplayNameFor(I => I.IsActive)</th>

                <th>Details</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in @Model)
            {
                <tr>
                    <td>
                        <img src="~/files/images/@employee.ImageName" width="75" class="rounded-circle" />
                    </td>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Address</td>
                    <td>@Html.DisplayFor(E => employee.Salary)</td>
                    <td>@Html.DisplayFor(E => employee.Email)</td>
                    <td>@employee.PhoneNumber</td>
                    @* <td>@employee.DateOfCreation</td> *@
                    <td>@employee.HiringDate</td>
                    @if (employee.WorkFor is not null)
                    {
                        <td>@employee.WorkFor.Name</td>
                    }
                    else
                    {
                        <td>Not Assigned! </td>
                    }
                    <td>@Html.DisplayFor(I => employee.IsActive)</td>

                    <partial name="_ButtonPartialView" model="@employee.Id.ToString()" />
                </tr>
            }


        </tbody>

    </table>
}
else
{

    @*it displays info about if the employee creating process succeeded or not*@
    @*------------------------------------------------------*@
    @*It Shows an alert saying there are no Employees*@

    <div class="alert alert-danger mt-5 ">
        <p>@TempData["Alert"]</p>
    </div>

}
